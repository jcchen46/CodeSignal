bool is_happy(std::vector<std::string>& a) {
    for (int i = 1; i < a.size(); ++i) {
        int diffs = 0;
        for (int j = 0; j < a[i].length(); ++j) {
            if (a[i][j] != a[i - 1][j]) diffs++;
        }
        if (diffs != 1) return false;
    }
    return true;
}

bool stringsRearrangement(std::vector<std::string> inputArray) {
    std::sort(inputArray.begin(), inputArray.end());
    do {
        if (is_happy(inputArray)) return true;
    } while (std::next_permutation(inputArray.begin(), inputArray.end()));
    return false;
}
